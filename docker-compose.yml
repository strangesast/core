version: '3.7'
services:
  connect:
    image: strangesast/core_connect
    network_mode: host
    build:
      context: kafka/connect
    environment:
      DATABASE_URL: "postgresql://localhost:5432/development"
      KAFKA_HOSTS: "localhost:9092"
      FLUSH_INTERVAL: 1000

#  kafka-streams:
#    image: strangesast/core_kafka-streams
#    network_mode: host
#    build:
#      context: kafka/streams
#    environment:
#      - KAFKA_HOSTS=kafka:9092
#      - STREAMS_APPLICATION_ID=streams-monitoring-dev

  graphql:
    image: hasura/graphql-engine
    ports:
      - "8080:8080"
    environment:
      HASURA_GRAPHQL_DATABASE_URL: "postgres://postgres:password@postgres:5432/development"
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: "anonymous"
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: "startup, http-log, webhook-log, websocket-log, query-log"
      HASURA_GRAPHQL_ENABLED_APIS: "metadata, graphql, pgdump"
      HASURA_GRAPHQL_ADMIN_SECRET: secretSECRETsecretSECRETsecretSECRET
      HASURA_GRAPHQL_JWT_SECRET: '{"type": "HS256", "key": "secretSECRETsecretSECRETsecretSECRET"}'

  hasura-metadata:
    image: hasura/graphql-engine:latest.cli-migrations-v2
    volumes:
      - ./hasura/migrations:/hasura-migrations
      - ./hasura/metadata:/hasura-metadata
    environment:
      HASURA_GRAPHQL_DATABASE_URL: "postgres://postgres:password@postgres:5432/development"

  postgres:
    image: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./sql/:/docker-entrypoint-initdb.d/
      - db_data:/var/lib/postgresql/data
    environment:
      - DATABASE_NAME=development
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "8081:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin
      - PGADMIN_DEFAULT_PASSWORD=password
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  gogs:
    image: gogs/gogs
    ports:
      - "2222:22"
    volumes:
      - gogs_data:/data

  jupyter:
    image: jupyter/datascience-notebook
    ports:
      - "8888:8888"
    environment:
      - NB_USER=user
    volumes:
      - jupyter_data:/home/user/work

volumes:
  client_build:
  pgadmin_data:
  jupyter_data:
  db_data:
    external: true
    name: core_db_data
  gogs_data:
    external: true
    name: core_gogs_data
