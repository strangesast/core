version: '3.7'
services:
#  zookeeper:
#    image: wurstmeister/zookeeper
#    ports:
#      - "2181:2181"
#  kafka:
#    image: wurstmeister/kafka
#    ports:
#      - "9092:9092"
#    environment:
#      - KAFKA_CREATE_TOPICS="input:1:1"
#      - KAFKA_ADVERTISED_HOST_NAME=kafka
#      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181

  # facilitate timeclock polling
  celery:
    image: python:3

  # read machine data
  machine-monitoring-processor:
    build:
      context: .
      dockerfile: docker/monitoring/Dockerfile
    ports:
      - "8082:8080"
    environment:
      - KAFKA_HOST=kafka
      - BASE_URL="http://10.0.0.101:5000"
      
  # main angular application
  client:
    build:
      context: .
      dockerfile: docker/client/Dockerfile
    ports:
      - "8081:80"

  # graphql server
  graphql-engine:
    image: hasura/graphql-engine:v1.2.1
    ports:
    - "8080:8080"
    depends_on:
    - "postgres"
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: "postgres://postgres:password@postgres:5432/development"
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: "startup, http-log, webhook-log, websocket-log, query-log"
      HASURA_GRAPHQL_ADMIN_SECRET: secretSECRETsecretSECRETsecretSECRET
      HASURA_GRAPHQL_JWT_SECRET: '{"type": "HS256", "key": "secretSECRETsecretSECRETsecretSECRET"}'

  # database
  postgres:
    image: postgres:12
    volumes:
      - ./sql/:/docker-entrypoint-initdb.d/
      - db_data:/var/lib/postgresql/data
    ports:
    - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password

  # authentication & authorization server
  server:
    build:
      context: .
      dockerfile: docker/server/Dockerfile
    environment:
      NODE_CONFIG: '{"secret":"secret123"}'
volumes:
  db_data:
